{"/Users/blackgik/projects/personal/knexpipeline.ts/src/index.ts":{"path":"/Users/blackgik/projects/personal/knexpipeline.ts/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":18},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":36}},"6":{"start":{"line":8,"column":19},"end":{"line":8,"column":40}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":36}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":41}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":102}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":100}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":37}},"13":{"start":{"line":26,"column":8},"end":{"line":26,"column":106}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":90}},"15":{"start":{"line":32,"column":8},"end":{"line":32,"column":104}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":101}},"17":{"start":{"line":38,"column":0},"end":{"line":38,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":38},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":50},"end":{"line":20,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":41},"end":{"line":23,"column":5}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":57},"end":{"line":27,"column":5}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":30},"end":{"line":30,"column":5}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":45},"end":{"line":33,"column":5}},"line":31},"6":{"name":"(anonymous_6)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":42},"end":{"line":36,"column":5}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":36}},"type":"cond-expr","locations":[{"start":{"line":25,"column":28},"end":{"line":25,"column":31}},{"start":{"line":25,"column":34},"end":{"line":25,"column":36}}],"line":25}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":4,"9":4,"10":2,"11":2,"12":4,"13":4,"14":2,"15":0,"16":0,"17":1},"f":{"0":4,"1":2,"2":2,"3":4,"4":2,"5":0,"6":0},"b":{"0":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/blackgik/projects/personal/knexpipeline.ts/src/index.ts","sources":["/Users/blackgik/projects/personal/knexpipeline.ts/src/index.ts"],"names":[],"mappings":";;;AAEA,mCAAyC;AACzC,iCAA+C;AAE/C,uCAAwC;AACxC,qCAAkD;AAClD,yCAAmD;AACnD,qCAAiD;AAEjD,MAAa,QAAQ;IACb,YAAY,CAAC;IACb,MAAM,CAAC;IAEd,YAAY,YAAkB,EAAE,MAAc;QAC7C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,KAAK,CACV,UAAuD,EACvD,KAAa,EACb,aAA2D;QAE3D,yBAAyB;QACzB,OAAO,MAAM,IAAA,sBAAc,EAC1B,IAAI,CAAC,YAAY,EACjB,UAAU,EACV,KAAK,EACL,aAAa,CACb,CAAC;IACH,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAAoB,EAAE,eAAwB;QACxD,OAAO,MAAM,IAAA,4BAAqB,EACjC,OAAO,EACP,IAAI,CAAC,YAAY,EACjB,eAAe,CACf,CAAC;IACH,CAAC;IAED,KAAK,CAAC,OAAO,CACZ,UAAuD,EACvD,KAAa,EACb,GAAc,EACd,aAA2D;QAE3D,GAAG,GAAG,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7B,OAAO,MAAM,IAAA,qBAAW,EACvB,UAAU,EACV,KAAK,EACL,GAAG,EACH,IAAI,CAAC,YAAY,EACjB,aAAa,CACb,CAAC;IACH,CAAC;IAED,KAAK,CAAC,MAAM,CACX,IAAiD,EACjD,KAAa;QAEb,OAAO,MAAM,IAAA,+BAAsB,EAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACrE,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,OAAwB,EAAE,eAAwB;QAChE,OAAO,MAAM,IAAA,gCAAqB,EACjC,OAAO,EACP,eAAe,EACf,IAAI,CAAC,YAAY,CACjB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,MAAM,CACX,IAAiD,EACjD,UAA+B,EAC/B,KAAa;QAEb,OAAO,MAAM,IAAA,8BAAqB,EACjC,IAAI,EACJ,KAAK,EACL,UAAU,EACV,IAAI,CAAC,YAAY,CACjB,CAAC;IACH,CAAC;CACD;AA1ED,4BA0EC","sourcesContent":["import knex, { Knex } from \"knex\";\nimport { knexModule } from \"./enum/index\";\nimport { countItemsInDB } from \"./count\";\nimport { findAllIemsNoPopulate } from \"./find\";\nimport { IfilterFind, IfilterPopulate } from \"./interfaces\";\nimport { findOneItem } from \"./findOne\";\nimport { insertItemIntoDatabase } from \"./insert\";\nimport { findAndJoinTableFetch } from \"./populate\";\nimport { updateItemSinDatabase } from \"./update\";\n\nexport class Pipeline {\n\tpublic dbconnection;\n\tpublic module;\n\n\tconstructor(dbconnection: Knex, module: string) {\n\t\tthis.dbconnection = dbconnection;\n\t\tthis.module = module;\n\t}\n\n\tasync count(\n\t\tfilterWith: Record<string, any>[] | Record<string, any>,\n\t\ttable: string,\n\t\tfilterWithout?: Record<string, any> | Record<string, any>[]\n\t) {\n\t\t// initiating count steps\n\t\treturn await countItemsInDB(\n\t\t\tthis.dbconnection,\n\t\t\tfilterWith,\n\t\t\ttable,\n\t\t\tfilterWithout\n\t\t);\n\t}\n\n\tasync find(options: IfilterFind, needsPagination: boolean) {\n\t\treturn await findAllIemsNoPopulate(\n\t\t\toptions,\n\t\t\tthis.dbconnection,\n\t\t\tneedsPagination\n\t\t);\n\t}\n\n\tasync findOne(\n\t\tfilterWith: Record<string, any>[] | Record<string, any>,\n\t\ttable: string,\n\t\tcol?: string[],\n\t\tfilterWithout?: Record<string, any> | Record<string, any>[]\n\t) {\n\t\tcol = col?.length ? col : [];\n\t\treturn await findOneItem(\n\t\t\tfilterWith,\n\t\t\ttable,\n\t\t\tcol,\n\t\t\tthis.dbconnection,\n\t\t\tfilterWithout\n\t\t);\n\t}\n\n\tasync insert(\n\t\tdata: Record<string, any> | Record<string, any>[],\n\t\ttable: string\n\t) {\n\t\treturn await insertItemIntoDatabase(data, table, this.dbconnection);\n\t}\n\n\tasync populate(options: IfilterPopulate, needsPagination: boolean) {\n\t\treturn await findAndJoinTableFetch(\n\t\t\toptions,\n\t\t\tneedsPagination,\n\t\t\tthis.dbconnection\n\t\t);\n\t}\n\n\tasync update(\n\t\tdata: Record<string, any> | Record<string, any>[],\n\t\tfilterWith: Record<string, any>,\n\t\ttable: string\n\t) {\n\t\treturn await updateItemSinDatabase(\n\t\t\tdata,\n\t\t\ttable,\n\t\t\tfilterWith,\n\t\t\tthis.dbconnection\n\t\t);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9c08599e4c3fcfa9b44b6f62e880ed6b7b644609","contentHash":"d1423f74ac16f1ac0da4a64906796cfc9c38b70d8cfc8a6a0922beb9a8c197f3"},"/Users/blackgik/projects/personal/knexpipeline.ts/src/count.ts":{"path":"/Users/blackgik/projects/personal/knexpipeline.ts/src/count.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":23},"end":{"line":26,"column":1}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":43}},"4":{"start":{"line":7,"column":4},"end":{"line":14,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":10,"column":11}},"6":{"start":{"line":9,"column":12},"end":{"line":9,"column":42}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":40}},"8":{"start":{"line":16,"column":4},"end":{"line":23,"column":5}},"9":{"start":{"line":17,"column":8},"end":{"line":19,"column":11}},"10":{"start":{"line":18,"column":12},"end":{"line":18,"column":45}},"11":{"start":{"line":21,"column":9},"end":{"line":23,"column":5}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":46}},"13":{"start":{"line":24,"column":18},"end":{"line":24,"column":29}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":21}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":23},"end":{"line":4,"column":24}},"loc":{"start":{"line":5,"column":30},"end":{"line":26,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":27},"end":{"line":8,"column":28}},"loc":{"start":{"line":8,"column":39},"end":{"line":10,"column":9}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":30},"end":{"line":17,"column":31}},"loc":{"start":{"line":17,"column":42},"end":{"line":19,"column":9}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":7},"end":{"line":5,"column":25}},"type":"default-arg","locations":[{"start":{"line":5,"column":23},"end":{"line":5,"column":25}}],"line":5},"1":{"loc":{"start":{"line":7,"column":4},"end":{"line":14,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":14,"column":5}},{"start":{"line":12,"column":9},"end":{"line":14,"column":5}}],"line":7},"2":{"loc":{"start":{"line":16,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":23,"column":5}},{"start":{"line":21,"column":9},"end":{"line":23,"column":5}}],"line":16},"3":{"loc":{"start":{"line":21,"column":9},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":9},"end":{"line":23,"column":5}},{"start":{},"end":{}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":0,"6":0,"7":2,"8":2,"9":0,"10":0,"11":2,"12":2,"13":2,"14":2,"15":1},"f":{"0":2,"1":0,"2":0},"b":{"0":[1],"1":[0,2],"2":[0,2],"3":[2,0]},"inputSourceMap":{"version":3,"file":"/Users/blackgik/projects/personal/knexpipeline.ts/src/count.ts","sources":["/Users/blackgik/projects/personal/knexpipeline.ts/src/count.ts"],"names":[],"mappings":";;;AAEO,MAAM,cAAc,GAAG,KAAK,EAClC,YAAkB,EAClB,UAAuD,EAAE,sDAAsD;AAC/G,KAAa,EACb,gBAA6D,EAAE,EAC9D,EAAE;IACH,IAAI,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;IAExC,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;QAC/B,UAAU,CAAC,OAAO,CAAC,CAAC,MAA2B,EAAE,EAAE;YAClD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACJ,CAAC;SAAM,CAAC;QACP,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IAED,yBAAyB;IACzB,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;QAClC,aAAa,CAAC,OAAO,CAAC,CAAC,MAA2B,EAAE,EAAE;YACrD,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACJ,CAAC;SAAM,IAAI,aAAa,EAAE,CAAC;QAC1B,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC;IAE1B,OAAO,EAAE,KAAK,EAAE,CAAC;AAClB,CAAC,CAAC;AA5BW,QAAA,cAAc,kBA4BzB","sourcesContent":["import { Knex } from \"knex\";\n\nexport const countItemsInDB = async (\n\tdbconnection: Knex,\n\tfilterWith: Record<string, any>[] | Record<string, any>, // can be an array for or values OR and for AND values\n\ttable: string,\n\tfilterWithout: Record<string, any> | Record<string, any>[] = {}\n) => {\n\tlet query = dbconnection(table).count();\n\n\tif (Array.isArray(filterWith)) {\n\t\tfilterWith.forEach((filter: Record<string, any>) => {\n\t\t\tquery = query.orWhere(filter);\n\t\t});\n\t} else {\n\t\tquery = query.where(filterWith);\n\t}\n\n\t// filtering out elements\n\tif (Array.isArray(filterWithout)) {\n\t\tfilterWithout.forEach((filter: Record<string, any>) => {\n\t\t\tquery = query.orWhereNot(filter);\n\t\t});\n\t} else if (filterWithout) {\n\t\tquery = query.whereNot(filterWithout);\n\t}\n\n\tconst count = await query;\n\n\treturn { count };\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d57be627e9e47f38d419e3053113265f3313ed93","contentHash":"1cb01d9cce128adf5f74c54cc957a0460565a693ce13ae07c9a25ca0290ffa6e"},"/Users/blackgik/projects/personal/knexpipeline.ts/src/find.ts":{"path":"/Users/blackgik/projects/personal/knexpipeline.ts/src/find.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":30},"end":{"line":65,"column":1}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":57}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":54}},"6":{"start":{"line":8,"column":16},"end":{"line":8,"column":69}},"7":{"start":{"line":9,"column":4},"end":{"line":16,"column":5}},"8":{"start":{"line":10,"column":8},"end":{"line":12,"column":11}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":42}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":48}},"11":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"12":{"start":{"line":18,"column":8},"end":{"line":20,"column":11}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":45}},"14":{"start":{"line":22,"column":9},"end":{"line":24,"column":5}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":54}},"16":{"start":{"line":25,"column":4},"end":{"line":38,"column":5}},"17":{"start":{"line":26,"column":8},"end":{"line":37,"column":11}},"18":{"start":{"line":27,"column":12},"end":{"line":36,"column":15}},"19":{"start":{"line":28,"column":16},"end":{"line":35,"column":19}},"20":{"start":{"line":29,"column":20},"end":{"line":34,"column":21}},"21":{"start":{"line":30,"column":24},"end":{"line":30,"column":84}},"22":{"start":{"line":33,"column":24},"end":{"line":33,"column":86}},"23":{"start":{"line":39,"column":4},"end":{"line":48,"column":5}},"24":{"start":{"line":40,"column":8},"end":{"line":46,"column":11}},"25":{"start":{"line":41,"column":12},"end":{"line":44,"column":13}},"26":{"start":{"line":42,"column":30},"end":{"line":42,"column":62}},"27":{"start":{"line":43,"column":16},"end":{"line":43,"column":55}},"28":{"start":{"line":45,"column":12},"end":{"line":45,"column":26}},"29":{"start":{"line":47,"column":8},"end":{"line":47,"column":44}},"30":{"start":{"line":49,"column":4},"end":{"line":54,"column":5}},"31":{"start":{"line":50,"column":8},"end":{"line":53,"column":11}},"32":{"start":{"line":55,"column":4},"end":{"line":62,"column":5}},"33":{"start":{"line":56,"column":23},"end":{"line":59,"column":33}},"34":{"start":{"line":60,"column":22},"end":{"line":60,"column":53}},"35":{"start":{"line":61,"column":8},"end":{"line":61,"column":45}},"36":{"start":{"line":63,"column":19},"end":{"line":63,"column":82}},"37":{"start":{"line":64,"column":4},"end":{"line":64,"column":22}},"38":{"start":{"line":66,"column":0},"end":{"line":66,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":30},"end":{"line":4,"column":31}},"loc":{"start":{"line":4,"column":80},"end":{"line":65,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":35},"end":{"line":10,"column":36}},"loc":{"start":{"line":10,"column":47},"end":{"line":12,"column":9}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":38},"end":{"line":18,"column":39}},"loc":{"start":{"line":18,"column":50},"end":{"line":20,"column":9}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":31},"end":{"line":26,"column":32}},"loc":{"start":{"line":26,"column":39},"end":{"line":37,"column":9}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":21},"end":{"line":27,"column":22}},"loc":{"start":{"line":27,"column":34},"end":{"line":36,"column":13}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":43},"end":{"line":28,"column":44}},"loc":{"start":{"line":28,"column":65},"end":{"line":35,"column":17}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":40,"column":25},"end":{"line":40,"column":26}},"loc":{"start":{"line":40,"column":37},"end":{"line":46,"column":9}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":19},"end":{"line":5,"column":51}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":46}},{"start":{"line":5,"column":49},"end":{"line":5,"column":51}}],"line":5},"1":{"loc":{"start":{"line":6,"column":21},"end":{"line":6,"column":56}},"type":"cond-expr","locations":[{"start":{"line":6,"column":38},"end":{"line":6,"column":52}},{"start":{"line":6,"column":55},"end":{"line":6,"column":56}}],"line":6},"2":{"loc":{"start":{"line":7,"column":20},"end":{"line":7,"column":53}},"type":"cond-expr","locations":[{"start":{"line":7,"column":36},"end":{"line":7,"column":49}},{"start":{"line":7,"column":52},"end":{"line":7,"column":53}}],"line":7},"3":{"loc":{"start":{"line":9,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":9},"end":{"line":16,"column":5}}],"line":9},"4":{"loc":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":9},"end":{"line":24,"column":5}}],"line":17},"5":{"loc":{"start":{"line":22,"column":9},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":9},"end":{"line":24,"column":5}},{"start":{},"end":{}}],"line":22},"6":{"loc":{"start":{"line":25,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":38,"column":5}},{"start":{},"end":{}}],"line":25},"7":{"loc":{"start":{"line":29,"column":20},"end":{"line":34,"column":21}},"type":"if","locations":[{"start":{"line":29,"column":20},"end":{"line":34,"column":21}},{"start":{"line":32,"column":25},"end":{"line":34,"column":21}}],"line":29},"8":{"loc":{"start":{"line":39,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":48,"column":5}},{"start":{},"end":{}}],"line":39},"9":{"loc":{"start":{"line":41,"column":12},"end":{"line":44,"column":13}},"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":44,"column":13}},{"start":{},"end":{}}],"line":41},"10":{"loc":{"start":{"line":49,"column":4},"end":{"line":54,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":54,"column":5}},{"start":{},"end":{}}],"line":49},"11":{"loc":{"start":{"line":55,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":62,"column":5}},{"start":{},"end":{}}],"line":55},"12":{"loc":{"start":{"line":61,"column":24},"end":{"line":61,"column":34}},"type":"binary-expr","locations":[{"start":{"line":61,"column":24},"end":{"line":61,"column":29}},{"start":{"line":61,"column":33},"end":{"line":61,"column":34}}],"line":61}},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":2,"6":2,"7":2,"8":0,"9":0,"10":2,"11":2,"12":0,"13":0,"14":2,"15":2,"16":2,"17":2,"18":4,"19":4,"20":0,"21":0,"22":0,"23":2,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":2,"31":2,"32":2,"33":2,"34":2,"35":2,"36":0,"37":0,"38":1},"f":{"0":2,"1":0,"2":0,"3":4,"4":4,"5":0,"6":0},"b":{"0":[2,0],"1":[2,0],"2":[2,0],"3":[0,2],"4":[0,2],"5":[2,0],"6":[2,0],"7":[0,0],"8":[0,2],"9":[0,0],"10":[2,0],"11":[2,0],"12":[2,0]},"inputSourceMap":{"version":3,"file":"/Users/blackgik/projects/personal/knexpipeline.ts/src/find.ts","sources":["/Users/blackgik/projects/personal/knexpipeline.ts/src/find.ts"],"names":[],"mappings":"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","sourcesContent":["import { Knex } from \"knex\";\nimport { IfilterFind } from \"./interfaces\";\n\nexport const findAllIemsNoPopulate = async (\n\toptions: IfilterFind,\n\tdbconnection: Knex,\n\tneedsPagination: boolean\n) => {\n\toptions.cols = options.cols ? options.cols : [];\n\toptions.offset = options.offset ? options.offset : 0;\n\toptions.limit = options.limit ? options.limit : 0;\n\n\tlet query = dbconnection.select(options.cols).from(options.table);\n\n\tif (Array.isArray(options.filterWith)) {\n\t\toptions.filterWith.forEach((filter: Record<string, any>) => {\n\t\t\tquery = query.orWhere(filter);\n\t\t});\n\t} else {\n\t\tquery = query.where(options.filterWith);\n\t}\n\n\tif (Array.isArray(options.filterWithout)) {\n\t\toptions.filterWithout.forEach((filter: Record<string, any>) => {\n\t\t\tquery = query.orWhereNot(filter);\n\t\t});\n\t} else if (options.filterWithout) {\n\t\tquery = query.whereNot(options.filterWithout);\n\t}\n\n\tif (options.searchWord) {\n\t\tquery = query.andWhere((qb: Knex) => {\n\t\t\tqb.where((innerQB: Knex) => {\n\t\t\t\toptions.searchkeys.forEach((searchKey, index) => {\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tinnerQB.where(searchKey, \"like\", `%${options.searchWord}%`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinnerQB.orWhere(searchKey, \"like\", `%${options.searchWord}%`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tif (options.cols.length > 0) {\n\t\toptions.cols.map((column: string) => {\n\t\t\tif (/\\b as \\b/g.test(column)) {\n\t\t\t\tconst regex = new RegExp(`\\\\b${\"as\"}\\\\b`, \"g\");\n\t\t\t\tcolumn = column.split(regex)[0].trim();\n\t\t\t}\n\n\t\t\treturn column;\n\t\t});\n\n\t\tquery = query.groupBy(options.cols);\n\t}\n\n\tif (options.timeFilters) {\n\t\tquery = query.whereBetween(options.timeFilters.key, [\n\t\t\toptions.timeFilters.fromTime,\n\t\t\toptions.timeFilters.toTime\n\t\t]);\n\t}\n\n\tif (needsPagination) {\n\t\tconst result = await query\n\t\t\t.orderBy(options.orderBy.col, options.orderBy.order)\n\t\t\t.offset(options.offset)\n\t\t\t.limit(options.limit);\n\n\t\tconst count = await query.count(\"* as count\");\n\n\t\treturn { count: count || 0, result };\n\t}\n\tconst result = await query.orderBy(\n\t\toptions.orderBy.col,\n\t\toptions.orderBy.order\n\t);\n\n\treturn { result };\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aa20abc89d97de2e4e51e856c72b1266e14875ba","contentHash":"a256296d25adc23b2109e0b3d3590e8e1c35344a4c7da8afcbdfd1abb63ca9a4"},"/Users/blackgik/projects/personal/knexpipeline.ts/src/findOne.ts":{"path":"/Users/blackgik/projects/personal/knexpipeline.ts/src/findOne.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":20},"end":{"line":24,"column":1}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"5":{"start":{"line":7,"column":8},"end":{"line":9,"column":11}},"6":{"start":{"line":8,"column":12},"end":{"line":8,"column":42}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":40}},"8":{"start":{"line":15,"column":4},"end":{"line":22,"column":5}},"9":{"start":{"line":16,"column":8},"end":{"line":18,"column":11}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":45}},"11":{"start":{"line":20,"column":9},"end":{"line":22,"column":5}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":46}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":23}},"14":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":20},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":83},"end":{"line":24,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":27},"end":{"line":7,"column":28}},"loc":{"start":{"line":7,"column":39},"end":{"line":9,"column":9}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":30},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":42},"end":{"line":18,"column":9}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},{"start":{"line":11,"column":9},"end":{"line":13,"column":5}}],"line":6},"1":{"loc":{"start":{"line":15,"column":4},"end":{"line":22,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":22,"column":5}},{"start":{"line":20,"column":9},"end":{"line":22,"column":5}}],"line":15},"2":{"loc":{"start":{"line":20,"column":9},"end":{"line":22,"column":5}},"type":"if","locations":[{"start":{"line":20,"column":9},"end":{"line":22,"column":5}},{"start":{},"end":{}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":0,"6":0,"7":4,"8":4,"9":0,"10":0,"11":4,"12":0,"13":4,"14":1},"f":{"0":4,"1":0,"2":0},"b":{"0":[0,4],"1":[0,4],"2":[0,4]},"inputSourceMap":{"version":3,"file":"/Users/blackgik/projects/personal/knexpipeline.ts/src/findOne.ts","sources":["/Users/blackgik/projects/personal/knexpipeline.ts/src/findOne.ts"],"names":[],"mappings":";;;AAEO,MAAM,WAAW,GAAG,KAAK,EAC/B,UAAuD,EACvD,KAAa,EACb,GAAa,EACb,YAAkB,EAClB,aAA2D,EAC1D,EAAE;IACH,IAAI,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAE3C,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;QAC/B,UAAU,CAAC,OAAO,CAAC,CAAC,MAA2B,EAAE,EAAE;YAClD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACJ,CAAC;SAAM,CAAC;QACP,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IAED,yBAAyB;IACzB,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;QAClC,aAAa,CAAC,OAAO,CAAC,CAAC,MAA2B,EAAE,EAAE;YACrD,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACJ,CAAC;SAAM,IAAI,aAAa,EAAE,CAAC;QAC1B,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACvC,CAAC;IAED,OAAO,MAAM,KAAK,CAAC;AACpB,CAAC,CAAC;AA3BW,QAAA,WAAW,eA2BtB","sourcesContent":["import { Knex } from \"knex\";\n\nexport const findOneItem = async (\n\tfilterWith: Record<string, any> | Record<string, any>[],\n\ttable: string,\n\tcol: string[],\n\tdbconnection: Knex,\n\tfilterWithout?: Record<string, any> | Record<string, any>[]\n) => {\n\tlet query = dbconnection(table).first(col);\n\n\tif (Array.isArray(filterWith)) {\n\t\tfilterWith.forEach((filter: Record<string, any>) => {\n\t\t\tquery = query.orWhere(filter);\n\t\t});\n\t} else {\n\t\tquery = query.where(filterWith);\n\t}\n\n\t// filtering out elements\n\tif (Array.isArray(filterWithout)) {\n\t\tfilterWithout.forEach((filter: Record<string, any>) => {\n\t\t\tquery = query.orWhereNot(filter);\n\t\t});\n\t} else if (filterWithout) {\n\t\tquery = query.whereNot(filterWithout);\n\t}\n\n\treturn await query;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"66f2bfd27b5c36c030511416c35be67d6d761451","contentHash":"76f6cbf77e67d1c15c0e72a7c66004f1542e06e0eebf1e29e6168359f6a75551"},"/Users/blackgik/projects/personal/knexpipeline.ts/src/insert.ts":{"path":"/Users/blackgik/projects/personal/knexpipeline.ts/src/insert.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":31},"end":{"line":7,"column":1}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":71}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":31},"end":{"line":4,"column":32}},"loc":{"start":{"line":4,"column":68},"end":{"line":7,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/blackgik/projects/personal/knexpipeline.ts/src/insert.ts","sources":["/Users/blackgik/projects/personal/knexpipeline.ts/src/insert.ts"],"names":[],"mappings":";;;AAEO,MAAM,sBAAsB,GAAG,KAAK,EAC1C,IAAiD,EACjD,KAAa,EACb,YAAkB,EACjB,EAAE;IACH,MAAM,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAEvC,OAAO,EAAE,GAAG,IAAI,EAAE,UAAU,EAAE,IAAI,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,IAAI,EAAE,EAAE,CAAC;AACpE,CAAC,CAAC;AARW,QAAA,sBAAsB,0BAQjC","sourcesContent":["import { Knex } from \"knex\";\n\nexport const insertItemIntoDatabase = async (\n\tdata: Record<string, any> | Record<string, any>[],\n\ttable: string,\n\tdbconnection: Knex\n) => {\n\tawait dbconnection(table).insert(data);\n\n\treturn { ...data, created_at: new Date(), updated_at: new Date() };\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1d77486e0367d39bf005af5696c6054a5b7cb747","contentHash":"6c8ded830835f1a3a473c40d14a8242e7ac32dedb774092a1d4c44ece7cb9a2b"},"/Users/blackgik/projects/personal/knexpipeline.ts/src/populate.ts":{"path":"/Users/blackgik/projects/personal/knexpipeline.ts/src/populate.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":30},"end":{"line":79,"column":1}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":73}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":57}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":54}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":76}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":61}},"8":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":40}},"10":{"start":{"line":13,"column":24},"end":{"line":13,"column":45}},"11":{"start":{"line":14,"column":16},"end":{"line":14,"column":67}},"12":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"13":{"start":{"line":16,"column":8},"end":{"line":16,"column":111}},"14":{"start":{"line":18,"column":4},"end":{"line":25,"column":5}},"15":{"start":{"line":19,"column":8},"end":{"line":21,"column":11}},"16":{"start":{"line":20,"column":12},"end":{"line":20,"column":42}},"17":{"start":{"line":24,"column":8},"end":{"line":24,"column":48}},"18":{"start":{"line":27,"column":4},"end":{"line":34,"column":5}},"19":{"start":{"line":28,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":29,"column":12},"end":{"line":29,"column":45}},"21":{"start":{"line":32,"column":9},"end":{"line":34,"column":5}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":54}},"23":{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},"24":{"start":{"line":36,"column":8},"end":{"line":38,"column":11}},"25":{"start":{"line":37,"column":12},"end":{"line":37,"column":36}},"26":{"start":{"line":40,"column":4},"end":{"line":53,"column":5}},"27":{"start":{"line":41,"column":8},"end":{"line":52,"column":11}},"28":{"start":{"line":42,"column":12},"end":{"line":51,"column":15}},"29":{"start":{"line":43,"column":16},"end":{"line":50,"column":19}},"30":{"start":{"line":44,"column":20},"end":{"line":49,"column":21}},"31":{"start":{"line":45,"column":24},"end":{"line":45,"column":84}},"32":{"start":{"line":48,"column":24},"end":{"line":48,"column":86}},"33":{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},"34":{"start":{"line":55,"column":8},"end":{"line":58,"column":11}},"35":{"start":{"line":61,"column":4},"end":{"line":66,"column":5}},"36":{"start":{"line":62,"column":8},"end":{"line":65,"column":11}},"37":{"start":{"line":63,"column":24},"end":{"line":63,"column":68}},"38":{"start":{"line":64,"column":12},"end":{"line":64,"column":56}},"39":{"start":{"line":67,"column":4},"end":{"line":67,"column":43}},"40":{"start":{"line":68,"column":23},"end":{"line":68,"column":36}},"41":{"start":{"line":69,"column":18},"end":{"line":69,"column":54}},"42":{"start":{"line":70,"column":4},"end":{"line":76,"column":5}},"43":{"start":{"line":71,"column":23},"end":{"line":74,"column":33}},"44":{"start":{"line":75,"column":8},"end":{"line":75,"column":52}},"45":{"start":{"line":77,"column":19},"end":{"line":77,"column":82}},"46":{"start":{"line":78,"column":4},"end":{"line":78,"column":22}},"47":{"start":{"line":80,"column":0},"end":{"line":80,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":30},"end":{"line":4,"column":31}},"loc":{"start":{"line":4,"column":80},"end":{"line":79,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":35},"end":{"line":19,"column":36}},"loc":{"start":{"line":19,"column":47},"end":{"line":21,"column":9}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":38},"end":{"line":28,"column":39}},"loc":{"start":{"line":28,"column":50},"end":{"line":30,"column":9}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":34},"end":{"line":36,"column":35}},"loc":{"start":{"line":36,"column":47},"end":{"line":38,"column":9}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":31},"end":{"line":41,"column":32}},"loc":{"start":{"line":41,"column":39},"end":{"line":52,"column":9}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":21},"end":{"line":42,"column":22}},"loc":{"start":{"line":42,"column":34},"end":{"line":51,"column":13}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":43,"column":43},"end":{"line":43,"column":44}},"loc":{"start":{"line":43,"column":65},"end":{"line":50,"column":17}},"line":43},"7":{"name":"(anonymous_7)","decl":{"start":{"line":62,"column":37},"end":{"line":62,"column":38}},"loc":{"start":{"line":62,"column":46},"end":{"line":65,"column":9}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":26},"end":{"line":5,"column":72}},"type":"cond-expr","locations":[{"start":{"line":5,"column":48},"end":{"line":5,"column":67}},{"start":{"line":5,"column":70},"end":{"line":5,"column":72}}],"line":5},"1":{"loc":{"start":{"line":6,"column":21},"end":{"line":6,"column":56}},"type":"cond-expr","locations":[{"start":{"line":6,"column":38},"end":{"line":6,"column":52}},{"start":{"line":6,"column":55},"end":{"line":6,"column":56}}],"line":6},"2":{"loc":{"start":{"line":7,"column":20},"end":{"line":7,"column":53}},"type":"cond-expr","locations":[{"start":{"line":7,"column":36},"end":{"line":7,"column":49}},{"start":{"line":7,"column":52},"end":{"line":7,"column":53}}],"line":7},"3":{"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":75}},"type":"cond-expr","locations":[{"start":{"line":8,"column":50},"end":{"line":8,"column":70}},{"start":{"line":8,"column":73},"end":{"line":8,"column":75}}],"line":8},"4":{"loc":{"start":{"line":9,"column":22},"end":{"line":9,"column":60}},"type":"cond-expr","locations":[{"start":{"line":9,"column":40},"end":{"line":9,"column":55}},{"start":{"line":9,"column":58},"end":{"line":9,"column":60}}],"line":9},"5":{"loc":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},{"start":{},"end":{}}],"line":10},"6":{"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":60}},"type":"binary-expr","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":27}},{"start":{"line":10,"column":31},"end":{"line":10,"column":60}}],"line":10},"7":{"loc":{"start":{"line":18,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":25,"column":5}},{"start":{"line":23,"column":9},"end":{"line":25,"column":5}}],"line":18},"8":{"loc":{"start":{"line":27,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":34,"column":5}},{"start":{"line":32,"column":9},"end":{"line":34,"column":5}}],"line":27},"9":{"loc":{"start":{"line":32,"column":9},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":9},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":32},"10":{"loc":{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},{"start":{},"end":{}}],"line":35},"11":{"loc":{"start":{"line":40,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":53,"column":5}},{"start":{},"end":{}}],"line":40},"12":{"loc":{"start":{"line":44,"column":20},"end":{"line":49,"column":21}},"type":"if","locations":[{"start":{"line":44,"column":20},"end":{"line":49,"column":21}},{"start":{"line":47,"column":25},"end":{"line":49,"column":21}}],"line":44},"13":{"loc":{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},{"start":{},"end":{}}],"line":54},"14":{"loc":{"start":{"line":61,"column":4},"end":{"line":66,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":66,"column":5}},{"start":{},"end":{}}],"line":61},"15":{"loc":{"start":{"line":70,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":76,"column":5}},{"start":{},"end":{}}],"line":70},"16":{"loc":{"start":{"line":75,"column":24},"end":{"line":75,"column":41}},"type":"binary-expr","locations":[{"start":{"line":75,"column":24},"end":{"line":75,"column":36}},{"start":{"line":75,"column":40},"end":{"line":75,"column":41}}],"line":75}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/blackgik/projects/personal/knexpipeline.ts/src/populate.ts","sources":["/Users/blackgik/projects/personal/knexpipeline.ts/src/populate.ts"],"names":[],"mappings":"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","sourcesContent":["import { Knex } from \"knex\";\nimport { IfilterPopulate } from \"./interfaces\";\n\nexport const findAndJoinTableFetch = async (\n\toptions: IfilterPopulate,\n\tneedsPagination: boolean,\n\tdbconnection: Knex\n) => {\n\toptions.foreignKeys = options.foreignKeys ? options.foreignKeys : [];\n\toptions.offset = options.offset ? options.offset : 0;\n\toptions.limit = options.limit ? options.limit : 0;\n\toptions.aggregations = options.aggregations ? options.aggregations : [];\n\toptions.groupBy = options.groupBy ? options.groupBy : [];\n\n\tif (!options.tableNames || options.tableNames.length < 1) {\n\t\treturn { count: 0, result: [] };\n\t}\n\n\tconst primaryTble = options.tableNames[0];\n\n\tlet query = dbconnection.select(options.cols).from(primaryTble);\n\n\tfor (let Joiner of options.foreignKeys) {\n\t\tquery = query.join(\n\t\t\tJoiner.joinTable,\n\t\t\t`${primaryTble}.${Joiner.foreignKey}`,\n\t\t\t\"=\",\n\t\t\t`${Joiner.localKey}`\n\t\t);\n\t}\n\n\tif (Array.isArray(options.filterWith)) {\n\t\toptions.filterWith.forEach((filter: Record<string, any>) => {\n\t\t\tquery = query.orWhere(filter);\n\t\t});\n\t} else {\n\t\tquery = query.where(options.filterWith);\n\t}\n\n\t// filtering out elements\n\tif (Array.isArray(options.filterWithout)) {\n\t\toptions.filterWithout.forEach((filter: Record<string, any>) => {\n\t\t\tquery = query.orWhereNot(filter);\n\t\t});\n\t} else if (options.filterWithout) {\n\t\tquery = query.whereNot(options.filterWithout);\n\t}\n\n\tif (options.filterRaw?.length) {\n\t\toptions.filterRaw.forEach((rawText) => {\n\t\t\tquery.whereRaw(rawText);\n\t\t});\n\t}\n\n\tif (options.searchWord) {\n\t\tquery = query.andWhere((qb) => {\n\t\t\tqb.where((innerQB) => {\n\t\t\t\toptions.searchkeys.forEach((searchKey, index) => {\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tinnerQB.where(searchKey, \"like\", `%${options.searchWord}%`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinnerQB.orWhere(searchKey, \"like\", `%${options.searchWord}%`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tif (options.timeFilters) {\n\t\tquery = query.whereBetween(options.timeFilters.key, [\n\t\t\toptions.timeFilters.fromTime,\n\t\t\toptions.timeFilters.toTime\n\t\t]);\n\t}\n\n\t// Aggregations\n\tif (options.aggregations.length > 0) {\n\t\toptions.aggregations.forEach((agg) => {\n\t\t\tconst raw = `${agg.aggType}(${agg.col}) as ${agg.alias}`;\n\n\t\t\tquery = query.select(dbconnection.raw(raw));\n\t\t});\n\t}\n\n\tquery = query.groupBy(options.groupBy);\n\n\tconst queryClone = query.clone();\n\n\tconst count = await queryClone.count(\"* as count\");\n\n\tif (needsPagination) {\n\t\tconst result = await query\n\t\t\t.orderBy(options.orderBy.col, options.orderBy.order)\n\t\t\t.offset(options.offset)\n\t\t\t.limit(options.limit);\n\n\t\treturn { count: count.length || 0, result };\n\t}\n\n\tconst result = await query.orderBy(\n\t\toptions.orderBy.col,\n\t\toptions.orderBy.order\n\t);\n\n\treturn { result };\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2dc4e9c4dbda5a2906e7e7fad05ee98634efc5eb","contentHash":"d2784848723f1909e7bff36a052767964ff81eb68bfa8294b29e6498f94c01fa"},"/Users/blackgik/projects/personal/knexpipeline.ts/src/update.ts":{"path":"/Users/blackgik/projects/personal/knexpipeline.ts/src/update.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":30},"end":{"line":7,"column":1}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":80}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":56}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":30},"end":{"line":4,"column":31}},"loc":{"start":{"line":4,"column":80},"end":{"line":7,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/blackgik/projects/personal/knexpipeline.ts/src/update.ts","sources":["/Users/blackgik/projects/personal/knexpipeline.ts/src/update.ts"],"names":[],"mappings":";;;AAEO,MAAM,qBAAqB,GAAG,KAAK,EACzC,IAAiD,EACjD,KAAa,EACb,UAA+B,EAC/B,aAAmB,EAClB,EAAE;IACH,MAAM,UAAU,GAAG,MAAM,aAAa,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAE7E,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,IAAI,EAAE,EAAE,CAAC;AACrD,CAAC,CAAC;AATW,QAAA,qBAAqB,yBAShC","sourcesContent":["import { Knex } from \"knex\";\n\nexport const updateItemSinDatabase = async (\n\tdata: Record<string, any> | Record<string, any>[],\n\ttable: string,\n\tfilterWith: Record<string, any>,\n\tdbconnections: Knex\n) => {\n\tconst updateData = await dbconnections(table).update(data).where(filterWith);\n\n\treturn { updateData, data, updated_at: new Date() };\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6da954706be1fdcc82535d63982468dfbb6fe03c","contentHash":"1f0b3142baf5bfdb43be47e6348f845ac83220263f86d1f6d5e20b8c66d2f4b0"}}